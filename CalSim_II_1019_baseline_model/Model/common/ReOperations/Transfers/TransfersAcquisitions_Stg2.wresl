! TransfersAcquisitions_Stg2.wresl
!
!******************************************************************************
! In Stage 2 the SWP Contractors in the South Bay and South Coast regions are the purchasers - the
!    supplies acquired under this stage are banked in local DSA inline storage (if implemented)
!    and/or delivered when capacity at Banks PP permits.
!
! The following sources of supply are permitted for Stage 2
!   - Yuba; GW supplies are generated in the lower Yuba River region at I204;
!           SW supplies are generated in reoperation of NBB under LYRA - transferrable amount reserved in D230_LYRA;
!   - Feather; both supply types are generated at Thermalito at D7B from sources in the FRSA
!   - Sac Valley; both supply types are generated at the Sac R at D114, D122 from sources in the Colusa Basin
!   - Sac Other; both supply types are generated at the Sac R at D128 from sources along the Sacramento River
!   - CA; GW substitution supplies are generated in the Tulare Basin region and delivered to the CA at I852
!         Crop Idling supplies are generated along the Eastside of the SJ Valley and delivered to the CA at I839
!******************************************************************************
!
! Read in Desired Stage 2 Acquisitions from Priority Table and
! Compute Stage 2 Acquisitions from Priority Table and check against Max

!******************************************************************************
define SaltCostFact_stg2 {select ItemValue from WTS_JobControl where Item=21.}
!define SJRExchLossFact {select ItemValue from WTS_JobControl where Item=22.}

!******************************************************************************
! Do SOD first
! Assume Target acquisition based on SJR Exchange Loss Factor
define Tot_Stg2_SJRTacq {value Total_Stg2_Targ/(1.-SJRExchLossFact)}

!******************************************************************************
! DMC acquisitions deactivated for Stage2
define DMCGW_Stg2 {value 0.}
define DMCCI_Stg2 {value 0.}

! Do California Aqueduct regions
!define CAGW_Dsr2 {select CA_GW from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SJRTacq use linear}
define CAGW_Dsr2 {value 0.}
define CACI_Dsr2 {select CA_CI from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SJRTacq use linear}
define WTS_Dsr2_SJRLmt {value min(Tot_Stg2_SJRTarg/(1.-SJRExchLossFact),
                                min(CAGW_Dsr2,CAGW_Max2)
                              + min(CACI_Dsr2,CACI_Max2))}
define CAGW_Stg2 {value min(CAGW_Dsr2,CAGW_Max2,
                            max(WTS_Dsr2_SJRLmt-min(CACI_Dsr2,CACI_Max2),0.) )}
define CACI_Stg2 {value min(CACI_Dsr2,CACI_Max2,
                            max(WTS_Dsr2_SJRLmt-min(CAGW_Dsr2,CAGW_Max2),0.) )}

! Calc SOD Total
define TOTAL_SJRStg2 {value DMCGW_Stg2 + DMCCI_Stg2 + CAGW_Stg2 + CACI_Stg2}
define WTS_SJR_Stg2 {alias TOTAL_SJRStg2 kind 'Stage2-Acquisition' units 'taf'}

!******************************************************************************
! Do NOD second
! Assume Target acquisition based on Delta Carriage Water and Loss Factor
! and considering what has already been acquired SOD (DMC and CA adjusted on SJR Exchange Loss Factor)
!
! get update on use of SJV supplies
!define CAGW_temp2 {select CA_GW from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SJRTacq use maximum}
define CAGW_temp2 {Value 0.}
define CACI_temp2 {select CA_CI from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SJRTacq use maximum}
!
define Tot_Stg2_SACTacq {value Total_Stg2_Targ/(1.-SaltCostFact_stg2)
                             - TOTAL_SJRStg2*(1.-SJRExchLossFact)/(1.-SaltCostFact_stg2) !adjust for SOD which has already been considered
                             + CAGW_temp2 + CACI_temp2}                                  !shift total since SOD is complete

!******************************************************************************
! Because the maximum for many of these terms varies apart from the maximum included in the
!   Acquisition Table - determine initial amounts and a modification to SACTacq that will
!   allow for proper acquistion selection
define YubaGW_Dsr2_       {select Yuba_GW from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SACTacq use linear}
define YubaSW_Dsr2_       {select Yuba_SW from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SACTacq use linear}
define FeathGW_Dsr2_    {select Feather_GW from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SACTacq use linear}
define FeathCI_Dsr2_    {select Feather_CI from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SACTacq use linear}
define SacGW_Dsr2_      {select SacValley_GW from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SACTacq use linear}
define SacCI_Dsr2_      {select SacValley_CI from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SACTacq use linear}
!define SacOthGW_Dsr2_   {select SacOther_GW from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SACTacq use linear}
define SacOthGW_Dsr2_   {value 0.}
define SacOthCI_Dsr2_   {select SacOther_CI from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SACTacq use linear}
!define AmerRGW_Dsr2_    {select AmerR_GW from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SACTacq use linear}
define AmerRGW_Dsr2_    {value 0.}
! Calculated adjusted Acquistion Target
define Tot_Stg2_SACTadj {value Tot_Stg2_SACTacq
                             + max(YubaGW_Dsr2_-YubaGW_Max2,0.)
                             + max(YubaSW_Dsr2_-YubaSW_Max2,0.)
                             + max(FeathGW_Dsr2_-FeathGW_Max2,0.)
                             + max(FeathCI_Dsr2_-FeathCI_Max2,0.)
                             + max(SacGW_Dsr2_-SacGW_Max2,0.)
                             + max(SacCI_Dsr2_-SacCI_Max2,0.)
                             + max(SacOthGW_Dsr2_-SacOthGW_Max2,0.)
                             + max(SacOthCI_Dsr2_-SacOthCI_Max2,0.)
                             + max(AmerRGW_Dsr2_-AmerRGW_Max2,0.)}

!******************************************************************************
! Yuba GW
define YubaGW_Dsr2 {select Yuba_GW from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SACTadj use linear}
define YubaGW_Stg2 {value min(YubaGW_Dsr2,YubaGW_Max2)}
! Yuba SW
define YubaSW_Dsr2 {select Yuba_SW from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SACTadj use linear}
define YubaSW_Stg2 {value min(YubaSW_Dsr2,YubaSW_Max2)}
! Feather GW
define FeathGW_Dsr2 {select Feather_GW from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SACTadj use linear}
define FeathGW_Stg2 {value min(FeathGW_Dsr2,FeathGW_Max2)}
! Feather CI
define FeathCI_Dsr2 {select Feather_CI from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SACTadj use linear}
define FeathCI_Stg2 {value min(FeathCI_Dsr2,FeathCI_Max2)}
! Sac Valley GW
define SacGW_Dsr2 {select SacValley_GW from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SACTadj use linear}
define SacGW_Stg2 {value min(SacGW_Dsr2,SacGW_Max2)}
! Sac Valley CI
define SacCI_Dsr2 {select SacValley_CI from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SACTadj use linear}
define SacCI_Stg2 {value min(SacCI_Dsr2,SacCI_Max2)}
! Sac Other GW
!define SacOthGW_Dsr2 {select SacOther_GW from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SACTadj use linear}
define SacOthGW_Dsr2 {value 0.}
define SacOthGW_Stg2 {value min(SacOthGW_Dsr2,SacOthGW_Max2)}
! Sac Other CI
define SacOthCI_Dsr2 {select SacOther_CI from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SACTadj use linear}
define SacOthCI_Stg2 {value min(SacOthCI_Dsr2,SacOthCI_Max2)}
! American R GW
!define AmerRGW_Dsr2 {select AmerR_GW from WTS_Stage2_AcquisitionScheme given Total=Tot_Stg2_SACTadj use linear}
define AmerRGW_Dsr2 {value 0.}
define AmerRGW_Stg2 {value min(AmerRGW_Dsr2,AmerRGW_Max2)}

! Calc NOD Total
define TOTAL_SACStg2 {value YubaGW_Stg2 + YubaSW_Stg2 + FeathGW_Stg2 + FeathCI_Stg2 + SacGW_Stg2 + SacCI_Stg2 + SacOthGW_Stg2 + SacOthCI_Stg2 + AmerRGW_Stg2}
define WTS_SAC_Stg2 {alias TOTAL_SACStg2 kind 'Stage2-Acquisition' units 'taf'}

!******************************************************************************
! Calc Total and any Adjustment for output purposes
define WTS_Total_Stg2 {alias TOTAL_SACStg2 + TOTAL_SJRStg2 kind 'Stage2-Acquisition' units 'taf'}
define WTS_Stg2Targ_adj {alias Total_SACStg2*(1.-SaltCostFact_stg2) + Total_SJRStg2*(1.-SJRExchLossFact)
                             - Total_Stg2_Targ kind 'Stage2-Target-Adjustment' units 'taf'}


define YubaGW_Stg2_dv   {alias YubaGW_Stg2 kind 'Stage2-Acquisition' units 'taf'}
define YubaSW_Stg2_dv   {alias YubaSW_Stg2 kind 'Stage2-Acquisition' units 'taf'}
define FeathGW_Stg2_dv  {alias FeathGW_Stg2 kind 'Stage2-Acquisition' units 'taf'}
define FeathCI_Stg2_dv  {alias FeathCI_Stg2 kind 'Stage2-Acquisition' units 'taf'}
define SacGW_Stg2_dv    {alias SacGW_Stg2 kind 'Stage2-Acquisition' units 'taf'}
define SacCI_Stg2_dv    {alias SacCI_Stg2 kind 'Stage2-Acquisition' units 'taf'}
define SacOthGW_Stg2_dv {alias SacOthGW_Stg2 kind 'Stage2-Acquisition' units 'taf'}
define SacOthCI_Stg2_dv {alias SacOthCI_Stg2 kind 'Stage2-Acquisition' units 'taf'}
define AmerRGW_Stg2_dv  {alias AmerRGW_Stg2 kind 'Stage2-Acquisition' units 'taf'}
define Stg2_SACTacq_dv  {alias Tot_Stg2_SACTacq kind 'Stage2-Acquisition' units 'taf'}
define Stg2_SACTadj_dv  {alias Tot_Stg2_SACTadj kind 'Stage2-Acquisition' units 'taf'}

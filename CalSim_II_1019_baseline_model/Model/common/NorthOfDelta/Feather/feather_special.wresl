! Code by E.Reyes as of 3/8/01
! Modified by D. Easton 12/04/00
! Modified by K. Singh 11/20/18. Migrated an updated version of FRSA winter water allocation logic from demands_69.wresl.

!!! Special Feather River Fish Criteria for Oct 15 - Nov 30 @ CP203

/*
Criteria being modeled:

If during the period of October 15 thru November 30, the flow in the Feather River at C.P. 203 is greater than
2500 cfs (except for flood release purposes), then the flow at C.P. 203 may not be less than 500 cfs below the
existing flow until after March 30.


How the Criteria is modeled:

The criteria only applies to a part of the month of October, so the trigger flow of 2500 cfs is flow weighted for
the entire month.  To compensate for the other half of the month that has no trigger, the trigger applied to the
entire month of October may be greater than 2500 cfs.  The triggers for October and November can be set in
'feather_fish_203.table'.

When the trigger is exceeded, a "price" must be paid (a minflow thru March as opposed to no minflow if the trigger
is not exceeded).  To avoid paying this price, releases for exports should be reduced to get below the trigger.
Releases to meet in-basin uses however, should never be reduced to get below the trigger.

If releases for flood control are made then no minimum flow is applied.
*/




!      In October and November, try to keep flow at CP203 < trigger otherwise pay the price
!      of a minflow(=OCT flow or NOV flow - 500cfs) through March.  Do this by reducing releases for exports if necessary.
!      If trigger is exceeded because of flood spills then no minflow is applied.


!Example:       month   C203 flow scenario        minflow
!       OCT     BELOW TRIGGER                     0 CFS =>  CHECK TO SEE WHAT HAPPENS NOVEMBER
!       OCT     ABOVE TRIGGER DUE TO FLOOD        0 CFS =>  CHECK TO SEE WHAT HAPPENS NOVEMBER
!       OCT     ABOVE TRIGGER                     C203 FLOW - 500 CFS  (NOV - MARCH)
!       NOV     BELOW TRIGGER                     0 CFS
!       NOV     ABOVE TRIGGER DUE TO FLOOD        0 CFS
!       NOV     ABOVE TRIGGER                     C203 FLOW - 500 CFS  (DEC - MARCH)


define oct_trigger_cfs {
        select    target
        from      feather_fish_203
        where   month = OCT}

define nov_trigger_cfs {
        select    target
        from      feather_fish_203
        where   month = NOV}

define minflow_C203 {
  case October {
    condition month == OCT
    value   0.
  }
  case November1 {
    condition   month == NOV .AND.
        int(C203(prevOCT)) <= oct_trigger_cfs
    value   0.
  }
  case November2 {
    condition month == NOV .AND.
        S6(prevOCT)-S6_WTS(prevOCT)+1. >= s6level5(prevOCT)
    value   0.
  }
  case November3 {
    condition month == NOV .and. D419_exp1(prevOct)<300.1
    value   0.
  }
  case November4 {
    condition month == NOV
    value   C203(prevOCT) - 500.
  }
  case DecemberToMarch1 {
    condition month >= DEC .AND. month <= MAR .AND.
        int(C203(prevOCT)) > oct_trigger_cfs .AND.
        S6(prevOCT)-S6_WTS(prevOCT)+1. < s6level5(prevOCT) .AND.  
        int(C203(prevNOV)) > nov_trigger_cfs .AND.
        S6(prevNOV)-S6_WTS(prevNOV)+1. < s6level5(prevNOV) .AND.
        D419_exp1(prevOct) > 300.1 .and. D419_exp1(prevNov) > 300.1
    value   max(C203(prevOCT) - 500., C203(prevNOV) - 500.)
  }
  case DecemberToMarch2 {
    condition month >= DEC .AND. month <= MAR .AND.
        int(C203(prevOCT)) > oct_trigger_cfs .AND. D419_exp1(prevOct) > 300.1 .and.
        S6(prevOCT)-S6_WTS(prevOCT)+1. < s6level5(prevOCT)
    value   C203(prevOCT) - 500.
  }
  case DecemberToMarch3 {
    condition month >= DEC .AND. month <= MAR .AND.
        int(C203(prevNOV)) > nov_trigger_cfs .AND. D419_exp1(prevNov) > 300.1 .and.
        S6(prevNOV)-S6_WTS(prevNOV)+1. < s6level5(prevNOV)
    value   C203(prevNOV) - 500.
  }
  case otherwise {
    condition always
    value   0.
  }
}

/* 
 If trigger is exceeded because of flood spills then no minflow is applied.
  If releases for flood control are made then no minimum flow is applied.
  In October and November, try to keep flow at C_Therm < trigger 
  otherwise pay the price of a minflow(=OCT flow or NOV flow - 500cfs) through March.  
  Do this by reducing releases for exports if necessary.
*/

!Ensure that the state can release sufficient water to meet it's IBU obligations and H&S

define D419_0 {upper 300 kind 'flow-delivery' units 'cfs'}
define D419_1 {std kind 'flow-delivery' units 'cfs'}
goal split_D419_EXP1 {D419_Exp1 = D419_0 + D419_1}

define int_HandS {integer std kind 'INTEGER' units 'none'}
goal boundN_D419_0 {D419_0 > int_HandS * 300}
goal boundN_D419_1 {D419_1 < int_HandS * 99999}

goal avoidTrigger {
  lhs C203
  case October {
    condition month == OCT
    rhs   oct_trigger_cfs + 99999 - 99999*int_HandS
    lhs>rhs   penalty 4600
    lhs<rhs   penalty 0
  }
  case November {
    condition month == NOV
    rhs   max(nov_trigger_cfs, minflow_C203 + 500) + 99999 - 99999*int_HandS
    lhs>rhs   penalty 4600
    lhs<rhs   penalty 0
  }
}

!DWR and DFG have an agreement to maintain ~1700 cfs minflow from the thermalito complex to the mouth (Just above Verona).
!The data for the timeseries minflow is defined in "minflow_C223", the Feather River flow above Verona.
!The actual minflow for C203, just below the Thermalito complex, is then the max of the minflow_C203 and minflow_C223.

define minflow_C223 {timeseries kind 'FLOW-MIN-REQUIRED' units 'CFS'}

goal meetC203Minflow {C203_MIF < max(minflow_C203, minflow_c223)}
define C203min {alias minflow_C203 kind 'CHANNEL-MINFLOW' units 'CFS'}

!Limit Oroville release to be limited to 10,000 cfs Jul-Sep for the protection of Orchards downstream.
goal OroRelJulSep {
        lhs C203
    case JulSep {
      condition month>=JUL .and. month<=SEP
      rhs               10000.
                        lhs>rhs   penalty 9990
      lhs<rhs   penalty 0 }
}


!DWR maintains flow at the "Mouth of Feather River" based on requirements of diversion pumping facilities.
!Their flow target depends on upstream Yuba and Oroville inflow, the DWR/DFG agreed flow target above Verona,
!and a 2800 cfs flow rate related to pumping facility requirements.
define frsa_alloc {
  case Drought {
    condition     wyt_FEATHER == 1
    value         0.50*(dem_D7A_PAG + dem_D7B_PAG + dem_D206A_PAG + dem_D206B_PAG)*taf_cfs}
  case Normal {
    condition    always
    value        1.00*(dem_D7A_PAG + dem_D7B_PAG + dem_D206A_PAG + dem_D206B_PAG)*taf_cfs}
}


define minflowFeaMouth {
    case DiversionSeason {
        condition month>=APR .and. month<=SEP
        value     max(min(2800.,I230-dem_D230_MI+I6-frsa_alloc),minflow_C223) }
    case other {
        condition always
        value     minflow_C223 }
}

goal MouthMinFlow {C223_MIF < minflowFeaMouth}


! Oroville would be operated only to satify minimum instream and delta conditions if less than 1.0 MAF - Aaron Miller 5/21/08
define C6_IBU {std kind 'flow-channel' units 'cfs'}  !Weight with -3000 to replace commented out constraint oro_releases.
define C6_EXP {std kind 'flow-channel' units 'cfs'}
goal split_C6 {C6 = C6_IBU + C6_EXP}

!-KS, 10/24/18. Aaron Miller (O&M) sugested updating EOS Oroville carryover target to 1.3 MAF    
!define C6_EXP_max_ {value max(0., I6 + (S6(-1) - 1000. - DrainTar_buffer)*taf_cfs)}
define C6_EXP_max_ {value max(0., I6 + (S6(-1) - 1300. - DrainTar_buffer)*taf_cfs)}

goal lim_C6_EXP {C6_EXP < C6_EXP_max_}

define C6_EXP_max {alias C6_EXP_max_ kind 'upper-bound' units 'cfs'}


/*goal oro_releases {
    lhs C6
    case low_storage {
        condition S6(-1) < 1000. + DrainTar_buffer
            rhs minflow_C203
            lhs>rhs penalty 3000.
            lhs<rhs penalty 0 }
    case norm_storage {
        condition always
            rhs minflow_C203
            lhs>rhs penalty 0
            lhs<rhs penalty 0 }
}*/

! Oroville would have physical contraints when reaching lower elevations - Aaron Miller 5/21/08
! oro<1250 TAF units 2,4,6 are lost
! oro<850 TAF units 1,3,5 are lost
!-KS, 10/5/2018. Updated river valve release capacity from 1500 cfs to 4000 cfs; based on input from B Giorgi (O&M).
!define C6_valve {upper 1500 kind 'flow-channel' units 'cfs'}
define C6_valve {upper 4000 kind 'flow-channel' units 'cfs'}
define C6_PP135 {upper 7200 kind 'flow-channel' units 'cfs'}
define C6_Rem {std kind 'flow-channel' units 'cfs'}
goal split_C62 {C6 = C6_valve + C6_PP135 + C6_Rem}

define C6_Rem_max_ {value max(0., I6 + (S6(-1) - 1250.)*taf_cfs)}
define C6_PP135_max_ {value max(0., I6 + (S6(-1) - 850.)*taf_cfs)}

goal lim_C6_Rem {C6_Rem < C6_Rem_max_}
!goal lim_C6_PP135 {C6_PP135 < C6_PP135_max_}
goal lim_C6_PP135 {
    lhs C6_PP135
    rhs C6_PP135_max_
    lhs<rhs penalty 0
    lhs>rhs penalty 99999}

define C6_Rem_max {alias C6_Rem_max_ kind 'upper-bound' units 'cfs'}
define C6_PP135_max {alias C6_PP135_max_ kind 'upper-bound' units 'cfs'}

/*goal river_valve_flow {
    lhs C6
    case river_valve_only {
    condition S6(-1) < 850. ! lose units 1,3,5 at 850 TAF only river valve can move water @ 1500 cfs (safe capacity)
        rhs 1500.
        lhs>rhs penalty 1000000
        lhs<rhs penalty 0 }
    case units_1_3_5_rv {       ! lose units 2,4,6 at 1250 TAF at this elevation.  Units 1,3,5 + river valve = 8700 max
        condition S6(-1) < 1250.
            rhs 8700.
        lhs>rhs constrain
        lhs<rhs penalty 0 }
    case full_hyatt_available {
    condition always
        rhs 17000.
        lhs>rhs penalty 0
        lhs<rhs penalty 0 }
}*/

!-KS, 11/20/18. FRSA Winter Water Allocation.
!Based on recommendation from Aaron Miller (O&M) and Ming-Yen Tu (O&M).
!Winter water allocations are made in full unless...
!	(1) Oroville EOS storage is below 900 TAF, then 0% allocation
!	(2) Oroville EOS storage is above 900 TAF but not enough to meet full 100% winter water allocation
!	    In this case, winter water allocations are scaled based on previous month storage above 900 TAF, 
!		current month's inflow and current month's winter water demand.
!	(3) Protect C203 MIF releases in additional to 900 TAF storage threshold.
!		minflow_C203 = redd dewatering protection
!		minflow_C223 = DFG/DWR Feather R MIF Agreement between Thermalito Complex and Verona

define decomp_allocdv {std kind 'Decomp-Alloc' units 'None'}

define decomp_alloc {
	case Oro_high {
		condition dem_D7C_DCMP > 0. .and. S6(-1) + (I6*cfs_TAF) - (max(minflow_c203, minflow_C223)*cfs_TAF) > 900.
			value min ((S6(-1) - 900. + (I6*cfs_TAF) - (max(minflow_c203, minflow_C223)*cfs_TAF))/dem_D7C_DCMP, 1.)	}
	case Oro_cutoff {
		condition always
			value 0.0	}
}

goal setdecomp_alloc {decomp_allocdv = decomp_alloc}

goal set_D7C {D7C < dem_D7C_DCMP*taf_cfs*decomp_alloc}
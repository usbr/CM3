!define C5_Vol_DV {std kind 'Volume' units 'TAF'}
define C5_Vol {
    case JunSep {
        condition month >= Jun
        sum(i=0,Sep-month,1) C5__Z4(i)*cfs_taf(i)}
    case otherwise {
        condition   always
        value 0. }
        }
!goal C5_Vol_DV {C5_Vol_DV = C5_Vol}

!define C109_Vol_DV {std kind 'Volume' units 'TAF'}
define C109_Vol {
    case JunSep {
        condition month >= Jun
        sum(i=0,Sep-month,1) C109__Z4(i)*cfs_taf(i)}
    case otherwise {
        condition   always
        value 0. }
        }
!goal C109_Vol_DV {C109_Vol_DV = C109_Vol}


define JunFlow_L1 {select JunFlow from NODOS_TemperatureOps where Level=1}
define JulFlow_L1 {select JulFlow from NODOS_TemperatureOps where Level=1}
define AugFlow_L1 {select AugFlow from NODOS_TemperatureOps where Level=1}
define SepFlow_L1 {select SepFlow from NODOS_TemperatureOps where Level=1}

define C109_VDef_L1_DV {std kind 'Volume-Deficient' units 'TAF'}
define C109_VDef_L1 {
    case Jun {
        condition month == Jun
        value max(JunFlow_L1*cfs_taf   -C109__Z4   *cfs_taf,   0.)
            + max(JulFlow_L1*cfs_taf(1)-C109__Z4(1)*cfs_taf(1),0.)
            + max(AugFlow_L1*cfs_taf(2)-C109__Z4(2)*cfs_taf(2),0.)
            + max(SepFlow_L1*cfs_taf(3)-C109__Z4(3)*cfs_taf(3),0.)}
    case JulSep {
        condition month >= Jul
        value C109_VDef_L1_DV(-1)}
    case otherwise {
        condition   always
        value 0. }
        }
goal C109_VDef_L1_DV {C109_VDef_L1_DV = C109_VDef_L1}


define JunFlow_L2 {select JunFlow from NODOS_TemperatureOps where Level=2}
define JulFlow_L2 {select JulFlow from NODOS_TemperatureOps where Level=2}
define AugFlow_L2 {select AugFlow from NODOS_TemperatureOps where Level=2}
define SepFlow_L2 {select SepFlow from NODOS_TemperatureOps where Level=2}

define C109_VDef_L2_DV {std kind 'Volume-Deficient' units 'TAF'}
define C109_VDef_L2 {
    case Jun {
        condition month == Jun
        value max(JunFlow_L2*cfs_taf   -C109__Z4   *cfs_taf,   0.)
            + max(JulFlow_L2*cfs_taf(1)-C109__Z4(1)*cfs_taf(1),0.)
            + max(AugFlow_L2*cfs_taf(2)-C109__Z4(2)*cfs_taf(2),0.)
            + max(SepFlow_L2*cfs_taf(3)-C109__Z4(3)*cfs_taf(3),0.)}
    case JulSep {
        condition month >= Jul
        value C109_VDef_L2_DV(-1)}
    case otherwise {
        condition   always
        value 0. }
        }
goal C109_VDef_L2_DV {C109_VDef_L2_DV = C109_VDef_L2}


define JunFlow_L3 {select JunFlow from NODOS_TemperatureOps where Level=3}
define JulFlow_L3 {select JulFlow from NODOS_TemperatureOps where Level=3}
define AugFlow_L3 {select AugFlow from NODOS_TemperatureOps where Level=3}
define SepFlow_L3 {select SepFlow from NODOS_TemperatureOps where Level=3}

define C109_VDef_L3_DV {std kind 'Volume-Deficient' units 'TAF'}
define C109_VDef_L3 {
    case Jun {
        condition month == Jun
        value max(JunFlow_L3*cfs_taf   -C109__Z4   *cfs_taf,   0.)
            + max(JulFlow_L3*cfs_taf(1)-C109__Z4(1)*cfs_taf(1),0.)
            + max(AugFlow_L3*cfs_taf(2)-C109__Z4(2)*cfs_taf(2),0.)
            + max(SepFlow_L3*cfs_taf(3)-C109__Z4(3)*cfs_taf(3),0.)}
    case JulSep {
        condition month >= Jul
        value C109_VDef_L3_DV(-1)}
    case otherwise {
        condition   always
        value 0. }
        }
goal C109_VDef_L3_DV {C109_VDef_L3_DV = C109_VDef_L3}


define JunFlow_L4 {select JunFlow from NODOS_TemperatureOps where Level=4}
define JulFlow_L4 {select JulFlow from NODOS_TemperatureOps where Level=4}
define AugFlow_L4 {select AugFlow from NODOS_TemperatureOps where Level=4}
define SepFlow_L4 {select SepFlow from NODOS_TemperatureOps where Level=4}

define C109_VDef_L4_DV {std kind 'Volume-Deficient' units 'TAF'}
define C109_VDef_L4 {
    case Jun {
        condition month == Jun
        value max(JunFlow_L4*cfs_taf   -C109__Z4   *cfs_taf,   0.)
            + max(JulFlow_L4*cfs_taf(1)-C109__Z4(1)*cfs_taf(1),0.)
            + max(AugFlow_L4*cfs_taf(2)-C109__Z4(2)*cfs_taf(2),0.)
            + max(SepFlow_L4*cfs_taf(3)-C109__Z4(3)*cfs_taf(3),0.)}
    case JulSep {
        condition month >= Jul
        value C109_VDef_L4_DV(-1)}
    case otherwise {
        condition   always
        value 0. }
        }
goal C109_VDef_L4_DV {C109_VDef_L4_DV = C109_VDef_L4}


define JunFlow_L5 {select JunFlow from NODOS_TemperatureOps where Level=5}
define JulFlow_L5 {select JulFlow from NODOS_TemperatureOps where Level=5}
define AugFlow_L5 {select AugFlow from NODOS_TemperatureOps where Level=5}
define SepFlow_L5 {select SepFlow from NODOS_TemperatureOps where Level=5}

define C109_VDef_L5_DV {std kind 'Volume-Deficient' units 'TAF'}
define C109_VDef_L5 {
    case Jun {
        condition month == Jun
        value max(JunFlow_L5*cfs_taf   -C109__Z4   *cfs_taf,   0.)
            + max(JulFlow_L5*cfs_taf(1)-C109__Z4(1)*cfs_taf(1),0.)
            + max(AugFlow_L5*cfs_taf(2)-C109__Z4(2)*cfs_taf(2),0.)
            + max(SepFlow_L5*cfs_taf(3)-C109__Z4(3)*cfs_taf(3),0.)}
    case JulSep {
        condition month >= Jul
        value C109_VDef_L5_DV(-1)}
    case otherwise {
        condition   always
        value 0. }
        }
goal C109_VDef_L5_DV {C109_VDef_L5_DV = C109_VDef_L5}


define JunFlow_L6 {select JunFlow from NODOS_TemperatureOps where Level=6}
define JulFlow_L6 {select JulFlow from NODOS_TemperatureOps where Level=6}
define AugFlow_L6 {select AugFlow from NODOS_TemperatureOps where Level=6}
define SepFlow_L6 {select SepFlow from NODOS_TemperatureOps where Level=6}

define C109_VDef_L6_DV {std kind 'Volume-Deficient' units 'TAF'}
define C109_VDef_L6 {
    case Jun {
        condition month == Jun
        value max(JunFlow_L6*cfs_taf   -C109__Z4   *cfs_taf,   0.)
            + max(JulFlow_L6*cfs_taf(1)-C109__Z4(1)*cfs_taf(1),0.)
            + max(AugFlow_L6*cfs_taf(2)-C109__Z4(2)*cfs_taf(2),0.)
            + max(SepFlow_L6*cfs_taf(3)-C109__Z4(3)*cfs_taf(3),0.)}
    case JulSep {
        condition month >= Jul
        value C109_VDef_L6_DV(-1)}
    case otherwise {
        condition   always
        value 0. }
        }
goal C109_VDef_L6_DV {C109_VDef_L6_DV = C109_VDef_L6}


define JunFlow_L7 {select JunFlow from NODOS_TemperatureOps where Level=7}
define JulFlow_L7 {select JulFlow from NODOS_TemperatureOps where Level=7}
define AugFlow_L7 {select AugFlow from NODOS_TemperatureOps where Level=7}
define SepFlow_L7 {select SepFlow from NODOS_TemperatureOps where Level=7}

define C109_VDef_L7_DV {std kind 'Volume-Deficient' units 'TAF'}
define C109_VDef_L7 {
    case Jun {
        condition month == Jun
        value max(JunFlow_L7*cfs_taf   -C109__Z4   *cfs_taf,   0.)
            + max(JulFlow_L7*cfs_taf(1)-C109__Z4(1)*cfs_taf(1),0.)
            + max(AugFlow_L7*cfs_taf(2)-C109__Z4(2)*cfs_taf(2),0.)
            + max(SepFlow_L7*cfs_taf(3)-C109__Z4(3)*cfs_taf(3),0.)}
    case JulSep {
        condition month >= Jul
        value C109_VDef_L7_DV(-1)}
    case otherwise {
        condition   always
        value 0. }
        }
goal C109_VDef_L7_DV {C109_VDef_L7_DV = C109_VDef_L7}


define JunFlow_L8 {select JunFlow from NODOS_TemperatureOps where Level=8}
define JulFlow_L8 {select JulFlow from NODOS_TemperatureOps where Level=8}
define AugFlow_L8 {select AugFlow from NODOS_TemperatureOps where Level=8}
define SepFlow_L8 {select SepFlow from NODOS_TemperatureOps where Level=8}

define C109_VDef_L8_DV {std kind 'Volume-Deficient' units 'TAF'}
define C109_VDef_L8 {
    case Jun {
        condition month == Jun
        value max(JunFlow_L8*cfs_taf   -C109__Z4   *cfs_taf,   0.)
            + max(JulFlow_L8*cfs_taf(1)-C109__Z4(1)*cfs_taf(1),0.)
            + max(AugFlow_L8*cfs_taf(2)-C109__Z4(2)*cfs_taf(2),0.)
            + max(SepFlow_L8*cfs_taf(3)-C109__Z4(3)*cfs_taf(3),0.)}
    case JulSep {
        condition month >= Jul
        value C109_VDef_L8_DV(-1)}
    case otherwise {
        condition   always
        value 0. }
        }
goal C109_VDef_L8_DV {C109_VDef_L8_DV = C109_VDef_L8}


define ShastaJun1 {
       case JunSep {
           condition  month == JUN
           select     JunSep
           from       Shasta_Inflow_Jun1Forecast
           where      year=wateryear }
       case JulSep {
           condition  month == JUL
           select     JulSep
           from       Shasta_Inflow_Jun1Forecast
           where      year=wateryear }
       case AugSep {
           condition  month == AUG
           select     AugSep
           from       Shasta_Inflow_Jun1Forecast
           where      year=wateryear }
       case Sep {
           condition  month == SEP
           select     Sep
           from       Shasta_Inflow_Jun1Forecast
           where      year=wateryear }
       case otherwise {
           condition  always
           value      0.  }
       }

define ShastaCondition {
	case Jun {
	    condition month == JUN
            value max(S4(-1) - 2400.,0.) }
	case Jul {
	    condition month == JUL
            value max(S4(-1) - 2400.,0.) }
	case Aug {
	    condition month == Aug
            value max(S4(-1) - 2400.,0.) }
	case Sep {
	    condition month == Sep
            value max(S4(-1) - 2400.,0.) }
        case otherwise {
            condition  always
            value      0.  }
       }

define ShastaForecast {value max(ShastaJun1 + ShastaCondition - C5_Vol,0.)}

/**
define ShastaForecast {
	case JunSep {
	    condition month >= Jun
            value max(S4__Z4(Sep-month) - 2000.,0.) }
        case otherwise {
            condition  always
            value      0.  }
       }
**/


define MaxAddVol_L1 {select MaxAddVol from NODOS_TemperatureOps where Level=1}
define MaxAddVol_L2 {select MaxAddVol from NODOS_TemperatureOps where Level=2}
define MaxAddVol_L3 {select MaxAddVol from NODOS_TemperatureOps where Level=3}
define MaxAddVol_L4 {select MaxAddVol from NODOS_TemperatureOps where Level=4}
define MaxAddVol_L5 {select MaxAddVol from NODOS_TemperatureOps where Level=5}
define MaxAddVol_L6 {select MaxAddVol from NODOS_TemperatureOps where Level=6}
define MaxAddVol_L7 {select MaxAddVol from NODOS_TemperatureOps where Level=7}
define MaxAddVol_L8 {select MaxAddVol from NODOS_TemperatureOps where Level=8}

define ERPC109_TempCtrl {        ! don't start till July
	case Target_L0 {
	    condition month >= JUN .and. ShastaForecast < C109_VDef_L1
	    value 6000. }
!
!	case June {
!	    condition month == JUN
!	    value 6000. }
!
	case Target_JunL1 {
	    condition month == JUN .and. ShastaForecast < C109_VDef_L2 .and. C109_VDef_L1 < MaxAddVol_L1
	    value JUNFlow_L1 }
	case Target_JunL2 {
	    condition month == JUN .and. ShastaForecast < C109_VDef_L3 .and. C109_VDef_L2 < MaxAddVol_L2
	    value JUNFlow_L2 }
	case Target_JunL3 {
	    condition month == JUN .and. ShastaForecast < C109_VDef_L4 .and. C109_VDef_L3 < MaxAddVol_L3
	    value JUNFlow_L3 }
	case Target_JunL4 {
	    condition month == JUN .and. ShastaForecast < C109_VDef_L5 .and. C109_VDef_L4 < MaxAddVol_L4
	    value JUNFlow_L4 }
	case Target_JunL5 {
	    condition month == JUN .and. ShastaForecast < C109_VDef_L6 .and. C109_VDef_L5 < MaxAddVol_L5
	    value JUNFlow_L5 }
	case Target_JunL6 {
	    condition month == JUN .and. ShastaForecast < C109_VDef_L7 .and. C109_VDef_L6 < MaxAddVol_L6
	    value JUNFlow_L6 }
	case Target_JunL7 {
	    condition month == JUN .and. ShastaForecast < C109_VDef_L8 .and. C109_VDef_L7 < MaxAddVol_L7
	    value JUNFlow_L7 }
	case Target_JunL8 {
	    condition month == JUN .and. ShastaForecast >= C109_VDef_L8 .and. C109_VDef_L8 < MaxAddVol_L8
	    value JUNFlow_L8 }
!
	case Target_JulL1 {
	    condition month == JUL .and. ShastaForecast < C109_VDef_L2 .and. C109_VDef_L1 < MaxAddVol_L1
	    value JULFlow_L1 }
	case Target_JulL2 {
	    condition month == JUL .and. ShastaForecast < C109_VDef_L3 .and. C109_VDef_L2 < MaxAddVol_L2
	    value JULFlow_L2 }
	case Target_JulL3 {
	    condition month == JUL .and. ShastaForecast < C109_VDef_L4 .and. C109_VDef_L3 < MaxAddVol_L3
	    value JULFlow_L3 }
	case Target_JulL4 {
	    condition month == JUL .and. ShastaForecast < C109_VDef_L5 .and. C109_VDef_L4 < MaxAddVol_L4
	    value JULFlow_L4 }
	case Target_JULL5 {
	    condition month == JUL .and. ShastaForecast < C109_VDef_L6 .and. C109_VDef_L5 < MaxAddVol_L5
	    value JULFlow_L5 }
	case Target_JULL6 {
	    condition month == JUL .and. ShastaForecast < C109_VDef_L7 .and. C109_VDef_L6 < MaxAddVol_L6
	    value JULFlow_L6 }
	case Target_JULL7 {
	    condition month == JUL .and. ShastaForecast < C109_VDef_L8 .and. C109_VDef_L7 < MaxAddVol_L7
	    value JULFlow_L7 }
	case Target_JULL8 {
	    condition month == JUL .and. ShastaForecast >= C109_VDef_L8 .and. C109_VDef_L8 < MaxAddVol_L8
	    value JULFlow_L8 }
!
	case Target_AugL1 {
	    condition month == AUG .and. ShastaForecast < C109_VDef_L2 .and. C109_VDef_L1 < MaxAddVol_L1
	    value AUGFlow_L1 }
	case Target_AugL2 {
	    condition month == AUG .and. ShastaForecast < C109_VDef_L3 .and. C109_VDef_L2 < MaxAddVol_L2
	    value AUGFlow_L2 }
	case Target_AugL3 {
	    condition month == AUG .and. ShastaForecast < C109_VDef_L4 .and. C109_VDef_L3 < MaxAddVol_L3
	    value AUGFlow_L3 }
	case Target_AugL4 {
	    condition month == AUG .and. ShastaForecast < C109_VDef_L5 .and. C109_VDef_L4 < MaxAddVol_L4
	    value AUGFlow_L4 }
	case Target_AUGL5 {
	    condition month == AUG .and. ShastaForecast < C109_VDef_L6 .and. C109_VDef_L5 < MaxAddVol_L5
	    value AUGFlow_L5 }
	case Target_AUGL6 {
	    condition month == AUG .and. ShastaForecast < C109_VDef_L7 .and. C109_VDef_L6 < MaxAddVol_L6
	    value AUGFlow_L6 }
	case Target_AUGL7 {
	    condition month == AUG .and. ShastaForecast < C109_VDef_L8 .and. C109_VDef_L7 < MaxAddVol_L7
	    value AUGFlow_L7 }
	case Target_AUGL8 {
	    condition month == AUG .and. ShastaForecast >= C109_VDef_L8 .and. C109_VDef_L8 < MaxAddVol_L8
	    value AUGFlow_L8 }
!
	case Target_SepL1 {
	    condition month == SEP .and. ShastaForecast < C109_VDef_L2 .and. C109_VDef_L1 < MaxAddVol_L1
	    value SEPFlow_L1 }
	case Target_SepL2 {
	    condition month == SEP .and. ShastaForecast < C109_VDef_L3 .and. C109_VDef_L2 < MaxAddVol_L2
	    value SEPFlow_L2 }
	case Target_SepL3 {
	    condition month == SEP .and. ShastaForecast < C109_VDef_L4 .and. C109_VDef_L3 < MaxAddVol_L3
	    value SEPFlow_L3 }
	case Target_SepL4 {
	    condition month == SEP .and. ShastaForecast < C109_VDef_L5 .and. C109_VDef_L4 < MaxAddVol_L4
	    value SEPFlow_L4 }
	case Target_SEPL5 {
	    condition month == SEP .and. ShastaForecast < C109_VDef_L6 .and. C109_VDef_L5 < MaxAddVol_L5
	    value SEPFlow_L5 }
	case Target_SEPL6 {
	    condition month == SEP .and. ShastaForecast < C109_VDef_L7 .and. C109_VDef_L6 < MaxAddVol_L6
	    value SEPFlow_L6 }
	case Target_SEPL7 {
	    condition month == SEP .and. ShastaForecast < C109_VDef_L8 .and. C109_VDef_L7 < MaxAddVol_L7
	    value SEPFlow_L7 }
	case Target_SEPL8 {
	    condition month == SEP .and. ShastaForecast >= C109_VDef_L8 .and. C109_VDef_L8 < MaxAddVol_L8
	    value SEPFlow_L8 }
!
	case otherwise {
	    condition S4(-1) >= 2100.
	    value 6000. }
!
	case otherwiseLowSha {
	    condition S4(-1) >= 1400.
	    value 4500. }
!
	case otherwiseCritSha {
	    condition always
	    value 0. }
         }

define ERPC5_TempCtrl_2 {
        case JunSep {
	    condition month >= JUN
            value min(C5__Z4 + ERPC109_TempCtrl - C109__Z4,
                                  ERPC109_TempCtrl)}
	case otherwise {
	    condition always
	    value 0. }
}

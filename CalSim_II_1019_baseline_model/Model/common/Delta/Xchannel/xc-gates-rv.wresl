! E. Reyes 7/2/98
! A. Munevar 11/20/99

!Cross Channel Code

/*
The flow through the Delta cross channel and Georgianna Slough are given by:

    DXC & Georg. Sl. Flow = (a * Sac Flow) + b
        where a = 0.293 , b = 2090 cfs ==> OPEN GATE POSITION
        where a = 0.133 , b = 829 cfs  ==> CLOSED GATE POSITION

 We can break the equation into individual components that will give the same result:

  Georgianna Sl. Flow           = 0.133*Qsac + 829  ==> OPEN OR CLOSED GATE POSITION
  DXC Flow                              = 0.160*Qsac + 1261 ==> OPEN GATE POSITION
  DXC Flow                              = 0.0               ==> CLOSED GATE POSITION
*/
/*
06/23/2011
The above documented equations are modified based on the flow results from 2009 DSM2 recalibration model
for estimating the DXC & Georg. Sl flow. The equations are modified as follows:

    DXC & Georg. Sl. Flow = (a * Sac Flow) + b
        where a = 0.3217 , b = 1051 cfs ==> OPEN GATE POSITION
        where a = 0.1321 , b = 1087 cfs  ==> CLOSED GATE POSITION

 We can break the equation into individual components that will give the same result:

  Georgianna Sl. Flow           = 0.1321*Qsac + 1087  ==> OPEN OR CLOSED GATE POSITION
  DXC Flow                              = 0.1896*Qsac - 36 ==> OPEN GATE POSITION
  DXC Flow                              = 0.0               ==> CLOSED GATE POSITION

*/
/*
06/23/2011
Modify the regression equations used to compute flow through the Delta cross channel and Georgiana Sl for the
BDCP PP (25000ac Restoration was included) scenario derived based on DSM2 outputs

DXC & Georg. Sl. Flow = (a * Sac Flow) + b
     where a = 0.2842, b = 453 cfs ==> OPEN GATE POSITION
         where a = 0.1339, b = 745 cfs ==> CLOSED GATE POSITION

We can break the equation into individual component that will give the same result:

  Georgianna Sl. Flow           = 0.1339*Qsac + 745  ==> OPEN OR CLOSED GATE POSITION
  DXC Flow                              = 0.1503*Qsac - 292 ==> OPEN GATE POSITION
  DXC Flow                              = 0.0               ==> CLOSED GATE POSITION
*/
! Split arc C401B into Georgianna Sl. and DXC components
define DXC_max {value 99999.*taf_cfs} ! over 1,600,000 cfs (plenty big)
define C401B_GEO {std kind 'FLOW-GEORGIANA' units 'CFS'}
define C401B_DXC {std kind 'FLOW-DXC' units 'CFS'}
goal splitC401B {C401B = C401B_GEO + C401B_DXC}

! Georgiana Sl. component is always this equation
goal GeorgSlough {C401B_GEO = 0.1321*C400 + 1087.0}
!goal GeorgSlough {C401B_GEO = 0.1339*C400 + 745.0}

! Number of days in each month that the DXC gate is open
define WQCP_days_open   {select days_open from xchanneldays where month=month}

define numberofdaysopen {value min(WQCP_days_open, NMFS_days_open, if_rv_days_open) } !NMFS_days_open defined in DCC_stub or DELTA RPAs logic

! Fraction of month gates are open
define fract_open   {value numberofdaysopen/daysin }
define fract_open_  {alias fract_open kind 'DXC-FRACT-OPEN' UNITS 'NONE'}  !for output only

! ######### Sac Flow Closure ###############
! Sac flow at which gates will be closed
define SAC_threshold  { value 25000.0} ! units =cfs

! The following variables are zero or one if their corresponding condition is false or true, respectively
define int_SAC_below  {INTEGER std kind 'INTEGER' units 'NONE'}                  ! 0: high flow; 1:  low flow
define int_SAC_above  {alias 1. - int_SAC_below kind 'INTEGER' units 'NONE'}     ! 1: high flow; 0:  low flow
define SAC_above {std kind 'FLOW-SAC-ABV' units 'CFS'}      ! zero if C400 < threshold
define SAC_below {std kind 'FLOW-SAC-BEL' units 'CFS'}      ! zero if C400 > threshold
define SAC_max {value 99999.*taf_cfs} ! over 1,600,000 cfs (plenty big)

! following constraints allow only one of the two flow variables to be positive
goal SAC_flood_flow  {SAC_above - SAC_below = C400 - SAC_threshold }
goal SAC_abv_force   {SAC_above < int_SAC_above * SAC_max}
goal SAC_bel_force   {SAC_below < int_SAC_below * SAC_max}

! code shengjun added 8/12/2004
!define DXC {lower unbounded kind 'GATE-DAYS-OPEN' units 'NONE'}
define DXC_est { value numberofdaysopen}
define DXC_estdv {alias DXC_est kind 'GATE-DAYS-OPEN' units 'NONE'}
goal setDXC {DXC = DXC_est * int_SAC_below}

! Gate open and closure equations with the automatic Sac closure
/*
goal closeGateSac {C401B_DXC < DXC_max*int_SAC_below}
goal openGateLbound {C401B_DXC < 0.160*C400*fract_open + 1261.0*fract_open}
goal openGateUboundSac {lhs   C401B_DXC
                        rhs   0.160*C400*fract_open + 1261.0*fract_open - SAC_max*int_SAC_above
                        lhs<rhs penalty 999999.
                        lhs>rhs penalty 0.
                        }
*/
! Gate open and closure equations with the automatic Sac closure
goal open_cond_flow { C401B_DXC = 0.1896*SAC_threshold*int_SAC_below*fract_open - 0.1896*SAC_below*fract_open + int_SAC_below*(-36.)*fract_open }
!goal open_cond_flow { C401B_DXC = 0.1503*SAC_threshold*int_SAC_below*fract_open - 0.1503*SAC_below*fract_open + int_SAC_below*(-292.)*fract_open }

GOAL HELP_INTEGER {LHS C401A RHS 0.0 LHS>RHS PENALTY 0.000001}


!******************************************************************************

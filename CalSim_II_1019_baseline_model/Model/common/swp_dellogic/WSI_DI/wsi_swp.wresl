
! The Water Supply Index (WSI) for the SWP is the sum of the beginning of months storages
! (BOM) for Lake Oroville (S6) and SWP-San Luis Reservoir (S12) and the Forecast of Runoff
! for the Feather River.

! Forecast of Runoff for SWP is defined as: Feather River component of the Sacramento
! River Index (SRI) - Sum of Oroville Lake Inflows (I6) since 1-OCT.

! Forecast of Feather River Runoff into Lake Oroville for REMAINDER of WATER YEAR
define frcst_fea {
    case JantoMay  {
        condition   month >= JAN .and. month <=MAY
        select      frcst_fea
        from        feather_runoff_forecast
        where       wateryear=wateryear, month=month  }
  case other {
    condition   always
    value       0.0 }
}

! Water Supply Index for State Water Project 

define co_final_dv {std kind 'carryover' units 'taf'}
define co_available_dv {std kind 'carryover' units 'taf'}
define co_correction {
    case Jan {
        condition   month == jan
        value       max(0.,co_final_dv(-1) - max(0., co_final_dv(-1) - (S12(-1) - 42.) - SIO_SWP(-1)))
    }
    case FebToMarFullSL {
        condition   month >= feb .and. month <= mar .and. S12(-1) >= 1067
        value       max(0.,co_available_dv(-1) - swp_co_total(-1)*cfs_taf(-1) - min(max(0.,co_available_dv(-1) - swp_co_total(-1)*cfs_taf(-1) - SIO_SWP(-1)), swp_IN_total(-1)*cfs_taf(-1) + max(0.,6680.-D419(-1)) * cfs_taf(-1)))
    }
    case FebToMarOth {
        condition   month >= feb .and. month <= mar
        value       max(0.,co_available_dv(-1) - swp_co_total(-1)*cfs_taf(-1) - min(max(0.,co_available_dv(-1) - swp_co_total(-1)*cfs_taf(-1) - SIO_SWP(-1)), swp_IN_total(-1)*cfs_taf(-1)))
    }
    case otherwise {
        condition   always
        value       0.
    }
}
define co_correction_ {alias co_correction kind 'carryover' units 'taf'}
        
define S12effective {case JantoMar {
                       condition range(month,jan,mar)
                       value max(S12(-1) - co_correction, 0.0)}
                     case Rest {
                       condition always
                       value S12(-1)}}

define WSI_SWP {
    case JantoApr {
        condition  month >= JAN .and. month <= APR
        value      S6(-1) - S6_WTS(-1) + S12effective  /*- swp_co_1*/ +
                   frcst_fea  }     ! Previous month storage plus forecast inflow
    case May {
        condition  month == MAY
        value      S6(-1) - S6_WTS(-1) + S12(-1) +
                   min(perdel_cvpag_s*100.,37.5)*SWPShastaSwitch  /*- swp_co_1*/ +
                   frcst_fea  }     ! Previous month storage plus forecast inflow
  case other {
    condition   always
    value       0.0 }
}

define WSI_SWP_dv {alias WSI_SWP kind 'water-supply-index' units 'taf'}

define WSI_SWP_io {
    case JantoApr {
        condition  month >= JAN .and. month <= APR
        value      S6(-1) - S6_WTS(-1) + S12effective /*- swp_co_1*/ +
                   frcst_fea + min(SIO_SWP(-1),max_return_swp2)  }     ! Previous month storage plus forecast inflow
    case May {
        condition  month == MAY
        value      S6(-1) - S6_WTS(-1) + S12(-1) +
                   min(perdel_cvpag_s*100.,37.5)*SWPShastaSwitch /*- swp_co_1*/ +
                   frcst_fea + min(SIO_SWP(-1),max_return_swp2)  }     ! Previous month storage plus forecast inflow
  case other {
    condition   always
    value       0.0 }
}

define WSI_SWP_io_ {alias WSI_SWP_io kind 'water-supply-index' units 'taf'}

! Do another version of WSI that includes NODOS SWP component contribution

! have found that this is a reasonable limit on how much water can be drawn from NODOS based on new pipeline release capacity only
define lmtWSIS31_conv {value 500.*upperC17603/1500.}

! don't rely on S31 if can't access the supply because of release limits
define lmtWSIS31_DryCap {
    case ShastaColdOffRamp {
         condition  S1(-1) + S4(-1) + S44(-1) < ColdStorTarg
         value lmtWSIS31_conv}                          ! only release pipe in driest conditions
    case CritCondOffRamp {
         condition wyt_NODOS + prev_wyt_SAC >= 8
         value lmtWSIS31_conv}
    case otherwise {
         condition  always
         value 99999.0 }
}

/*
! use NODOS to top off SWP Storage first (scale use of Sites according to Oroville condition)
define lmtWSIS31_OroStr {
    case Low {
         condition  S6(-1) < 2000. .or. wyt_SAC >= 5.
         value 200.}
    case Medium {
         condition  S6(-1) < 2500. .or. wyt_SAC >= 4.
         value 400.}
    case otherwise {
         condition  always
         value 99999.0 }
}

define lmtWSIforS31 {value min(lmtWSIS31_OroStr,lmtWSIS31_drycap)}
*/
define lmtWSIforS31 {value lmtWSIS31_drycap}

define WSI_SWP_NDS {
    case JantoMay {
        condition  month >= JAN .and. month <= MAY
        value      WSI_SWP + min(S31(-1),lmtWSIforS31)}
    case other {
        condition  always
        value      0.0 }
}

define WSI_SWP_NDS_dv {alias WSI_SWP_NDS kind 'water-supply-index' units 'taf'}

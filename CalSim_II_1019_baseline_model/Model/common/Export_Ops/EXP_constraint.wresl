! EXP_constraint.wresl
!
! **********************************************************************************************
!
! Determine health and safety level at OMR that must be allowed
define HandS_minpump {
     case JanMay {
          condition month>=JAN .and. month<=MAY
          value 1500.}
     case Jun {
          condition month==JUN
!          value 2000.}
          value 1500.}
     case other {
          condition always
          value 0.}
}

! Take the most restrictive of the NMFS export restrictions but consider the Health
! and safety level export that must be allowed. Minimum H&S export level is removed 
! from calculation if IF is active.  This is so that if the IF is active, Through Delta 
! exports don't have to meet entire H&S pumping amount, IF can contribute.  Goal
! set_HandSminpump further down will pull in water from the IF for this.
define MAXEXP_RPA {value max( min(NMFS_MaxExp, NMFS_MaxExp_DCC, FWS_MaxExp_X2), (1-max(JonesIFSwitch,BanksIFSwitch)) * HandS_minpump)}
!
! **********************************************************************************************
!

!-KS, 8/24/18. Revised code to assign available export capacity, instead of assigning portion of export reduction met by each project.
!-KS, 8/24/18. This formulation allows for experimenting with other than 50/50 sharing of available export capacity.

define Export_dec_RPA {value max(0.,D409[UPSTREAM] - MAXEXP_RPA)}
!define SWP_exp_dec_RPA {value max(0.,min(Export_dec_RPA,D419_swp_TD[UPSTREAM] - D418_TD[UPSTREAM]))}
!define CVP_exp_dec_RPA {value max(0.,min(Export_dec_RPA,D418_TD[UPSTREAM] - D419_swp_TD[UPSTREAM]))}
!define Comb_exp_dec_RPA {value max(0., Export_dec_RPA - SWP_exp_dec_RPA - CVP_exp_dec_RPA)}

define Export_dec_RPA_ {alias Export_dec_RPA kind 'temp' units 'cfs'}
!define SWP_exp_dec_RPA_ {alias SWP_exp_dec_RPA kind 'temp' units 'cfs'}
!define CVP_exp_dec_RPA_ {alias CVP_exp_dec_RPA kind 'temp' units 'cfs'}
!define Comb_exp_dec_RPA_ {alias Comb_exp_dec_RPA kind 'temp' units 'cfs'}

!-KS, 9/17/18. Adjust for months when despite the BO RPAs limiting South Delta pumping, Delta remains in Balanced conditions using following criteria
!-KS, 9/17/18. 1 = Balanced Delta. 0 = Surplus Delta
!	- Balanced month before RPAs are applied (C407[UPSTREAM] - C407_ANN[UPSTREAM] < 0.1 .or. EI_Control_On[UPSTREAM] > 0.5)
!	- South Delta exports are controlled by RPA (D409[DELTA_SRPLS] > MaxExp + 0.1) OR (D409[DELTA_SRPLS] + 0.1 < D409[UPSTREAM])
!	- Delta remains in Balanced conditions (C406[UPSTREAM] - C406[DELTA_SRPLS] < 0.1)

define Balanced_NMFS {  
    case Balanced_to_Excess {
        condition Balanced_up > 0.5                                          !(1) Delta under Balanced conditions in the Upstream cycle; defined in SharingRatios_BO.wresl
                    .and. D409[UPSTREAM] > D409[DELTA_SRPLS] + 0.1              !(2) South Delta exports drop below the Upstream cycle levels
                    .and. D409[DELTA_SRPLS] - MaxExp_RPA[DELTA_SRPLS] < 0.1     !(3) South Delta exports capped by MaxExp exports
                    .and. C406[DELTA_SRPLS] > C406[UPSTREAM] + 0.1              !(4) RPAs result in additional Delta Outflow and "push" Delta into Surplus conditions
        value 0.0 }
    case Remains_Balanced {
        condition Balanced_up > 0.5                                          !(1) Delta under Balanced conditions in the Upstream cycle; defined in SharingRatios_BO.wresl
                    .and. D409[UPSTREAM] > D409[DELTA_SRPLS] + 0.1              !(2) South Delta exports drop below the Upstream cycle levels
                    .and. D409[DELTA_SRPLS] - MaxExp_RPA[DELTA_SRPLS] < 0.1     !(3) South Delta exports capped by MaxExp exports
                    .and. C406[DELTA_SRPLS] - C406[UPSTREAM] < 0.1              !(4) No additional outflow despite reduction in South Delta exports, i.e., Delta remains in Balanced conditions
        value 1.0 }
    case Remains_Excess {
        condition always
        value 0.0 }
}

!-KS, 9/12/18. Limit the new export sharing ratios to SJR IE only.
define CVPExpCapShare_NMFS {
	case Balanced_Apr_May {
		condition Balanced_NMFS > 0.5
					.and. month >= apr .and. month <= may !-KS, 9/12/18. Limiting to SJR IE only.
		value CVPExpCapShare_Blncd
	}
	case Excess_Apr_May {
		condition Balanced_NMFS < 0.5
					.and. month >= apr .and. month <= may !-KS, 9/12/18. Limiting to SJR IE only.
		value CVPExpCapShare_Srpls
	}
	case otherwise {
		condition always
		value 0.5	!-KS, 9/12/18. 50/50 sharing of Fall X2 and DXC burden.
	}
}

define SWPExpCapShare_NMFS {
	case Balanced_Apr_May {
		condition Balanced_NMFS > 0.5
					.and. month >= apr .and. month <= may !-KS, 9/12/18. Limiting to SJR IE only.
		value SWPExpCapShare_Blncd
	}
	case Excess_Apr_May {
		condition Balanced_NMFS < 0.5
					.and. month >= apr .and. month <= may !-KS, 9/12/18. Limiting to SJR IE only.
		value SWPExpCapShare_Srpls
	}
	case otherwise {
		condition always
		value 0.5	!-KS, 9/12/18. 50/50 sharing of Fall X2 and DXC burden.
	}
}

define Balanced_NMFS_ {alias Balanced_NMFS kind 'temp' units 'none'}
define CVPExpCapShare_NMFS_ {alias CVPExpCapShare_NMFS kind 'temp' units 'none'}
define SWPExpCapShare_NMFS_ {alias SWPExpCapShare_NMFS kind 'temp' units 'none'}

!define MAXEXP_RPA_CVP {value max(tracyminpump,min(0.5*MAXEXP_RPA,D418[UPSTREAM]/*maxTracycalc*/)) }
!define MAXEXP_RPA_SWP {value max(banksminpump,MAXEXP_RPA - MAXEXP_RPA_CVP) }
define MAXEXP_RPA_CVP_Init {value CVPExpCapShare_NMFS*MAXEXP_RPA}
define MAXEXP_RPA_SWP_Init {value SWPExpCapShare_NMFS*MAXEXP_RPA}

define Unused_MAXEXP_RPA_CVP {value max(0., MAXEXP_RPA_CVP_Init - D418_TD[UPSTREAM])}
define Unused_MAXEXP_RPA_SWP {value max(0., MAXEXP_RPA_SWP_Init - D419_swp_TD[UPSTREAM])}

define MAXEXP_RPA_CVP {value max(tracyminpump,min(D418_TD[UPSTREAM], MAXEXP_RPA_CVP_Init) + Unused_MAXEXP_RPA_SWP)}
define MAXEXP_RPA_SWP {value max(banksminpump,min(D419_swp_TD[UPSTREAM], MAXEXP_RPA_SWP_Init) + Unused_MAXEXP_RPA_CVP)}

!-KS, 9/17/18. Limit NMFS RPAs impact on South Delta exports to SJR IE only.
!-KS, 9/17/18. Fall X2 and DXC to be treated as in-basin use.
!-KS, 9/18/18. RPAs can still constrain total exports. It is assumed that other constraints (cheifly, COA IBU and UWFE) sharing will dictate how these are shared.

goal set_MAXEXP_RPA_SWP {
    lhs     D419_swp_TD
	case SjrIeOnly {
		condition   month>=apr .and.  month<=may
		rhs     MAXEXP_RPA_SWP
		lhs<rhs penalty    0}
}

define MAXEXP_RPA_SWP_Initdv {alias MAXEXP_RPA_SWP_Init kind 'TEMP' units 'CFS'}
define Unused_MAXEXP_RPA_SWPdv {alias Unused_MAXEXP_RPA_SWP kind 'TEMP' units 'CFS'}
define MAXEXP_RPA_SWPdv {alias MAXEXP_RPA_SWP kind 'EXPORT-LIMIT' units 'CFS'}

goal set_MAXEXP_RPA_CVP {
    lhs     D418_TD
	case SjrIeOnly {
		condition   month>=apr .and.  month<=may
		rhs     MAXEXP_RPA_CVP
		lhs<rhs penalty    0}
}

define MAXEXP_RPA_CVP_Initdv {alias MAXEXP_RPA_CVP_Init kind 'TEMP' units 'CFS'}
define Unused_MAXEXP_RPA_CVPdv {alias Unused_MAXEXP_RPA_CVP kind 'TEMP' units 'CFS'}
define MAXEXP_RPA_CVPdv {alias MAXEXP_RPA_CVP kind 'EXPORT-LIMIT' units 'CFS'}

define MAXEXP_RPAdv {alias MAXEXP_RPA kind 'EXPORT-LIMIT' units 'CFS'}

goal set_HandSminpump {
    lhs     D418_TD + D419_TD + D418_IF + D419_IF
    case IF_on {
     condition  max(JonesIFSwitch,BanksIFSwitch) > 0.5
     rhs     HandS_minpump
     lhs>rhs penalty 0
     lhs<rhs penalty 90000}
}

! This constraint also handles the condition when maxexp_rpa is determined by
! X2 or DCC conditions - no sharing of this export restriction other than through
! COA IBU/UWFE percentages.
! This also limits Partner use of LV by export constraints.
goal constrain_D408_P {D418_TD + D419_TD + D408_P < maxexp_rpa}

/*  This file contains the logic for the Coordinated Operation Agreement (COA).
    This logic is based on the 1986 COA document and on DWRSIM documentation and logic.
    The concept of the COA is as follows:

    1) If total CVP and SWP exports are greater than what was withdrawn from storage then
       there was excess water in the system called unstored water for export (UWFE).
       This water must be shared using the negotiated formulas.  The current formula
       gives CVP 55% of this water.  The rest goes to SWP. INT_IBU_UWFE = 1

    2) If total CVP and SWP storage withdrawals are greater than the total exports then
       there were In-Basin-Uses (IBU) that required storage withdrawals.  The responsibility
       for these requirements is to be shared according to the negotiated formulas. The
       current formula requires CVP to provide 75% of these storage withdrawals.  The rest
       is provided by SWP.  INT_IBU_UWFE = 0

    3) Often after meeting it's COA obligation one of the projects (usually CVP) can't
       export all the water it's entitled to due to export capacity.  This logic allows
       the other project to take any unused portion.  It's important that a project
       be allowed to take all that it wants before giving up any of its share.

    4) There are very specific definitions for UWFE and IBU in the COA document.  These
       definitions have been followed as closely as possible. Some things to keep in mind:
       - Storage increases are considered part of the UWFE and are shared as per the formulas.
       - CVP only includes Whiskeytown storage withdrawals, not storage increases in its
         definition of change in storage.

    5) Weights have been placed on the CVP share of UWFE (CVP_UWFE) and each projects unused
       share to allow each project only to take what it's entitled to plus any unused share.
       You don't want CVP cutting its export to allow SWP to take more water.

    6) For SWPDS, SHADS and FOLDS: positive is storage withdrawal, negative is storage increase.

    7) Total exports are defined as total Banks pumping including wheeling plus Tracy pumping
       plus Contra Costa Export.  Wheeling is considered as a CVP export and is defined with
       separate wresl logic. */


!******************* DEFINES  ************************************

! define decision variables to be used in the COA statements

define SWPDS {lower -1000000. upper 1000000. kind 'STORAGE-CHANGE' UNITS 'CFS'} !  SWP change in storage
define SHADS {lower -1000000. upper 1000000. kind 'STORAGE-CHANGE' UNITS 'CFS'} !  Shasta change in storage
define FOLDS {lower -1000000. upper 1000000. kind 'STORAGE-CHANGE' UNITS 'CFS'} !  Folsom change in storage
define WHSSW {std kind 'STORAGE-WDL' UNITS 'CFS'}                               !  Whiskeytown storage withdrawal
define WHSSI {std kind 'STORAGE-INC' UNITS 'CFS'}                               !  Whiskeytown storage increase
define IBU   {std kind 'IBU' UNITS 'CFS'}                                 !  Total In-Basin-Uses met with storage withdrawals
define UWFE  {std kind 'UWFE' UNITS 'CFS'}                                !  Total Unstored-Water-For-Export
define CVP_SHARE {std kind 'PERCENT-COA' UNITS 'NONE'}                !  CVP COA Share
define SWP_SHARE {std kind 'PERCENT-COA' UNITS 'NONE'}                !  SWP COA Share
define UNUSED_FS {std kind 'UNUSED-FS' UNITS 'CFS' }                      !  Unused Federal Share of surplus
define UNUSED_SS {std kind 'UNUSED-SS' UNITS 'CFS' }                      !  Unused State Share of surplus

! define binary 'integer' decision variables that are used to force other variables to
! be either positive or zero
define int_WHS_stor_chg {INTEGER std kind 'INTEGER' UNITS 'NONE'}         ! this defines an integer with bounds [0,1]
define int_IBU_UWFE     {INTEGER std kind 'INTEGER' UNITS 'NONE'}         ! this defines an integer with bounds [0,1]

! Define max values for decision variables to be forced.  This simply needs to be
! sufficiently large so that the variable will never exceed the value, but small enough
! to avoid truncation/roundoff errors in the force constraints.
define WHS_stor_chg_max {value 3000.*taf_cfs}
define IBU_UWFE_max     {value 9999999.}

! *************************** SWP STORAGE CHANGE DEFINITIONS **********************************

/*  COA document actually defines SWPSW as:
    Palermo Canal Diversion + Thermalito DD Release to Feather River
  + Thermalito DD Diversion to Hatchery + Butte County Diversion
  + Thermalito ID Diversion + Richvale Canal + Western Canal + PG&E Lateral
  + Sutter Butte Canal + Thermalito Afterbay Release to Feather River
  - Lake Oroville Inflow - Kelly Ridge Power Plant Discharge

  These are mostly diversions from Thermalito Afterbay which is not directly
  modeled by CALSIM.  In CALSIM these diversions are mixed in with other FRSA
  Diversions and can't be separated out with the current hydrology.

  Another way of defining SWP storage change using the current CALSIM Schematic
  and Hydrology is to use:
  Palermo Canal Diversion + Thernalito Forebay Release to Feather River
  + Fish Flow Diversion - Lake Oroville Inflow - Kelly Ridge Power Plant Discharge */

! NODOS facility
define NODOSswpDS {lower -1000000. upper 1000000. kind 'STORAGE-CHANGE' UNITS 'CFS'} !  NODOS change in storage
goal NODOSswp_storage_change {NODOSswpDS = C31 + C31A + C5_S32SWP /*+ D31*/ - C177B} !NODOS storage change

! Total
goal swp_storage_change {SWPDS = C5_SWP + C203_m + D6 + D201 + D202 + D7A + D7B + D7B_WTS + D7C - I6 + I6_WTS - I200 + NODOSswpDS}!Define SWP Storage Change

! **************************** CVP STORAGE CHANGE DEFINITIONS ******************************

! Shasta Reservoir

/*  COA document actually defines Shasta storage withdrawal as:
    Keswick Dam Release + Keswick Diversions + Shasta Diversions
    - Shasta Inflow - Discharge from Spring Creek Power Plant
    This results in:                            */

goal shasta_storage_change {SHADS = C5_m - I4 + I4_WTS - D3_m} !Define Shasta Storage Change

! Folsom Reservoir

/*  COA Document actually defines Folsom storage withdrawal as:
    Nimbus Release + Nimbus Diversion to Folsom South Canal
    + Diversions from Folsom Lake - Inflow to Folsom
    Including local inflow into Nimbus this results in: */

goal folsom_storage_change { FOLDS = C9_m + D9 + D8 - I9 - I8 - C300 }      !Define Folsom Storage Change

! Whiskeytown Reservoir

goal whiskey_storage_change {WHSSW - WHSSI = C3_m + D3_m - I3}

goal WHSSW_force {WHSSW < int_WHS_stor_chg * WHS_stor_chg_max}                   ! if int=0, WHSSW=0, WHSSI=pos
goal WHSSI_force {WHSSI < WHS_stor_chg_max - int_WHS_stor_chg * WHS_stor_chg_max}! if int=1, WHSSW=pos, WHSSI=0

! NODOS facility
define NODOScvpDS {lower -1000000. upper 1000000. kind 'STORAGE-CHANGE' UNITS 'CFS'} !  NODOS change in storage
goal NODOScvp_storage_change {NODOScvpDS = C32_m + C32A + C32B + C32C + D32 - C177C_norm } !NODOS storage change

! ********************** COA BALANCE CONSTRAINTS *******************************************

/* This goal is the guts of COA.  It includes delta surplus plus total exports including wheeling plus
   total change in storage. If RHS is positive you have UWFE, If negative you have IBU.
   D419 = Total Banks pumping = D419_swp + D419_cvpded + swp_wheel
   C407 = Delta surplus
   D418 = Tracy
   D408 = Contra Costa
   C402B = Northbay Aqueduct   */

define D408_DS_EXP1 {std kind 'flow-delivery' units 'cfs'}      !CCWD diversion of Delta surplus under LV water right.
define D408_DS_EXP2 {std kind 'flow-delivery' units 'cfs'}      !CCWD diversion of Delta surplus under LV water right.

define D168B_EXP1 {std kind 'FLOW-DELIVERY' units 'CFS'}        !added for Delta Exporter study of Freeport Project- RSR
define D168B_EXP2 {std kind 'FLOW-DELIVERY' units 'CFS'}        !added for Delta Exporter study of Freeport Project- RSR

define C407_cvp {std kind 'FLOW-CHANNEL' units 'CFS'}
define C407_swp {std kind 'FLOW-CHANNEL' units 'CFS'}
define C407_ann {std kind 'FLOW-CHANNEL' units 'CFS'}

goal CCWD_DS_arcspit {D408_DS = D408_DS_EXP1 + D408_DS_EXP2}

goal ebmudArcSplit {D168B = D168B_EXP1 + D168B_EXP2 } !added for Delta Exporter study of Freeport Project- RSR
goal srpArcSplit {C407 = C407_cvp + C407_swp + C407_ann + C407_whlcv
                       + C407_whljp + C407_WTS}

goal COA_balance {UWFE - IBU = C407_cvp + C407_swp + D408_DS_EXP1
                             + D418_EXP1 + D419_EXP1 + D419_CVPDED_EXP1
                             + D168B_EXP1 + D408_CVP + 2./3.*D403B + 2./3.*D403C
                             + D168c_exc_ntDep + Surp1Terms + Surp2Terms
                             - SHADS - FOLDS - WHSSW - NODOScvpDS - SWPDS + UNUSED_FS + UNUSED_SS + D408_P}

goal UWFE_force {UWFE < int_IBU_UWFE * IBU_UWFE_max}                       ! if int=0, UWFE=0, IBU=pos
goal IBU_force  {IBU < IBU_UWFE_max - int_IBU_UWFE * IBU_UWFE_max}         ! if int=1, UWFE=pos, IBU=0

!-KS, 8/24/18. Defined in the SharingRatios.wresl
!define CVP_UWFE {value 0.55}                           ! CVP COA Share of unstored water for export
!define CVP_IBU  {value 0.75}                             ! CVP COA Share of storage withdrawals
goal CVP_Split {CVP_share = int_IBU_UWFE * CVP_UWFE + CVP_IBU - CVP_IBU * int_IBU_UWFE}  !CVP Share
goal SWP_Split {SWP_share = 1.0 - CVP_share }                      !SWP Share

/*  Restrict exports to satisfy COA:  Exports = storage withdrawal - storage increase -
    share of in basin uses + share of unstored water for export + other party's unused share
    Note that swp_wheel is amount of water wheeled by SWP for CVP and is considered a CVP export
    also note D419_swp = banks pumping without Wheeling  */

goal coa_cvp3 { D418_EXP1 + D419_CVPDED_EXP1 + D168B_EXP1 + D408_CVP + D408_DS_EXP1 + D408_P_WHL_SF_E1 + D408_P_DEL_CVP + D408_P_STR_CVP
                + Surp1Terms
        = SHADS + FOLDS + WHSSW + NODOScvpDS - CVP_IBU*IBU + CVP_UWFE*UWFE - UNUSED_FS - C407_cvp
                - D168c_exc_ntDep1}
goal coa_swp3 { D419_EXP1 + 2./3.*D403B + 2./3.*D403C
                + Surp2Terms + D408_P_WHL_SB_E1 + D408_P_DEL_SWP + D408_P_STR_SWP
                = SWPDS - SWP_IBU*IBU + SWP_UWFE*UWFE - UNUSED_SS - C407_swp
                - D168c_exc_ntDep2}


goal setUNUSED_FS { D419_EXP2 + D408_P_WHL_SB_E2  < UNUSED_FS }
goal setUNUSED_SS { D418_EXP2 + D419_CVPDED_EXP2 + D168B_EXP2 + D408_DS_EXP2 + D408_P_WHL_SF_E2  < UNUSED_SS }

! The projects share available export capacity when EI is controlling.

!EI_control_on = 1 when the EI Ratio was controlling total exports in the PRESETUP cycle.  When controlling, sharing logic under the EI control is implemented in the SETUP cycle.
!When NOT controlling in the PRESETUP cycle, EI sharing logic is turned off and protections are implemented to prevent one project from incurring the carriage
!costs of another project aggressively pressing against the EI constraint in the remaining cycles.
/*
define EI_control_on {
    case EI_control {
        condition   c407_swp[PRESETUP] + c407_cvp[PRESETUP] > 0.1 .and. 
                    eiexpctrl[PRESETUP] - ExportActualTD[PRESETUP] < 0.01 .and. 
                    MRDO_final < C406[PRESETUP] + 0.1
        value       1.
    }
    case otherwise {
        condition   always
        value       0.
    }
}
*/
goal EI_split_swp {
    lhs     D419_EXP1_TD
    case ei_control {
    condition   EI_control > 0.5 .and. C408[DELTA_SRPLS] > C408_Limit + 0.1 .and. MAXEXP_RPA > ExportActualTD[DELTA_SRPLS] + 0.1
     rhs        SWPExpCapShare_D1641*EiExpCtrl
     lhs>rhs    penalty 1285
     lhs<rhs    penalty 0
}}
goal EI_split_cvp {
    lhs     D418_EXP1_TD + D419_CVPDEDEX1TD
    case ei_control {
    condition   EI_control > 0.5 .and. C408[DELTA_SRPLS] > C408_Limit + 0.1 .and. MAXEXP_RPA > ExportActualTD[DELTA_SRPLS] + 0.1
     rhs        CVPExpCapShare_D1641*EiExpCtrl
     lhs>rhs    penalty 1285
     lhs<rhs    penalty 0
}}


! If nothing (EI, OMR, RPAs) was specifically controlling exports in DELTA_SRPLS, the following goals apply
goal No_EI_split_swp1 {
    lhs     D419_SWP
    case no_ei_control {
    condition   EI_control < 0.5 .and. C408[DELTA_SRPLS] > C408_Limit .and. MAXEXP_RPA > ExportActualTD[DELTA_SRPLS] .and. MRDO_final < C406[PRESETUP] + 0.1
    rhs        D419_SWP[DELTA_SRPLS]
    lhs>rhs    penalty 0
    lhs<rhs penalty 1290
}}

goal No_EI_split_swp2 {
    lhs     C407_SWP
    case no_ei_control {
    condition   EI_control < 0.5 .and. S12[PRESETUP] > swprulecv[PRESETUP] + 0.01 .and. C408[DELTA_SRPLS] > C408_Limit .and. MAXEXP_RPA > ExportActualTD[DELTA_SRPLS]
    rhs        C407_SWP[DELTA_SRPLS]
    lhs<rhs    penalty 0
    lhs>rhs    penalty 1290
}}

goal No_EI_split_cvp1 {
    lhs     D418_CVP
    case no_ei_control {
    condition   EI_control < 0.5 .and. C408[DELTA_SRPLS] > C408_Limit .and. MAXEXP_RPA > ExportActualTD[DELTA_SRPLS] .and. MRDO_final < C406[PRESETUP] + 0.1
    rhs        D418_CVP[DELTA_SRPLS]
    lhs>rhs    penalty 0
    lhs<rhs penalty 1290
}}

goal No_EI_split_cvp2 {
    lhs     C407_CVP
    case no_ei_control {
    condition   EI_control < 0.5 .and. S11[PRESETUP] > cvprulecv[PRESETUP] + 0.01 .and. C408[DELTA_SRPLS] > C408_Limit .and. MAXEXP_RPA > ExportActualTD[DELTA_SRPLS]
    rhs        C407_CVP[DELTA_SRPLS]
    lhs<rhs    penalty 0
    lhs>rhs    penalty 1290
}}

! Only apply sharing logic under the AprilMay pulse flow export contraint when this constraint was controlling operations in the PRESETUP cycle.
goal AprMay_split_swp {
    lhs     D419_EXP1_TD
     case AprMay {
        condition range(month,apr,may) .and. C407_swp[PRESETUP] + C407_cvp[PRESETUP] > 0.1 
                  .and. aprmayexpctrl[PRESETUP] - ExportActualTD[PRESETUP] < 0.01 .and. MAXEXP_RPA > ExportActualTD[DELTA_SRPLS]

     rhs        SWPExpCapShare_D1641*AprMayExpCtrl
     lhs>rhs    penalty 1285
     lhs<rhs    penalty 0
     }
}
goal AprMay_split_cvp {
    lhs     D418_EXP1_TD + D419_CVPDEDEX1TD
     case AprMay {
        condition range(month,apr,may) .and. C407_swp[PRESETUP] + C407_cvp[PRESETUP] > 0.1 
                  .and. aprmayexpctrl[PRESETUP] - ExportActualTD[PRESETUP] < 0.01 .and. MAXEXP_RPA > ExportActualTD[DELTA_SRPLS]

     rhs        CVPExpCapShare_D1641*AprMayExpCtrl
     lhs>rhs    penalty 1285
     lhs<rhs        penalty 0
     }
}

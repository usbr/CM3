/*This file was developed to vary following sharing ratios by water year type:
- COA IBU
- COA UWFE
- Available export capacity during months when regulations limit South Delta exports: 1) D1641 EI, 2) D1641 Vernalis 1:1, 3) BO RPA OMR, and 4) NMFS BO RPAs

CVP sharing ratios are included in ShrngRatios.table.
SWP sharing ratios = (1 - CVP sharing ratio)*/

! CVP COA share of Unstored Water For Export
define CVP_UWFE {select cvp_uwfe_
       from       ShrngRatios
       where      wyt=wyt_SAC}

define SWP_UWFE {value 1 - CVP_UWFE}
       
! CVP COA share of In Basin Use
define CVP_IBU {select cvp_ibu_
       from       ShrngRatios
       where      wyt=wyt_SAC}
       
define SWP_IBU {value 1 - CVP_IBU}
       
! CVP's share of available export capacity during export constrained conditions
! Balanced months are defined as...
!   - projects are operated to meet the Delta Water Quality standards (C407 - C407_ANN < 0.1)
!   - when EI is controlling and projects end up paying tax to push against EI
!       defined by the EI_Control_On in coa.wresl and coa_BO.wresl
! Surplus months are defined as...
!   - non-Balanced month
!   - if OMR or SJR IE pushes Delta into excess conditions (classified as Excess with limitations or Excess with export restrictions)
!
!Balanced month definition is revised to address the simplifications made through the Upstream cycle.

!-KS, 9/18/18. From Nancy Parker. Below comments from Karandev Singh.

!First, determine when is EI controlling.
!Next, determine which of the months under EI control are Balanced Months, i.e., projects are actively pushing against the EI to move water South
!	- San Luis is below or near Rule Curve

!Limit EI check to EiExpCtrl and through Delta Exports.
!This will cover both instances:
!	(1) when projects are operating to meet required Delta Outflow standards and make use of the Delta Inflow to export up to EI limit (C407 - C407_ANN < 0.1 or C407_CVP + C407_SWP < 0.1);
! 	(2)	when projects are paying the "tax" - releasing above the required Delta Outflow - to move water (C407_CVP + C407_SWP > 0.1)
!-KS, 9/20/18. Tracy capacity condition to be reviewed at a later date.
define EI_Control {
    case Controlling {
        condition abs(EiExpCtrl[DELTA_SRPLS] - ExportActualTD[DELTA_SRPLS]) < 0.1 .and. ExportActualTD[DELTA_SRPLS]*.65 < TracyMaxAllow
        value 1.0 }
    case otherwise {
        condition always
        value 0.0 }
}

!Next check to see if San Luis is driving the South Delta exports
!-KS, 9/20/18. There is some debate about the 1000 cfs trigger. After conferring with R Leaf and C Chilmakuri, we agreed that we should not cap to 1000 cfs and capture all instances when the project pay the EI tax.
!-KS, 9/20/18. Also, only include project specific C407 triggers. (R Leaf and C Chilmakuri)
define RuleCVControl {
    case CVPRule {
        condition (abs(S11[DELTA_SRPLS] - CVPrulecv[DELTA_SRPLS])<.1 .or. S11[DELTA_SRPLS] < CVPrulecv[DELTA_SRPLS])
                   .and. C407_cvp[DELTA_SRPLS] > 0.1	!-KS, 9/18/18. Projects are paying tax to move water South to fill San Luis.
        value 1.}
    case SWPRule {
        condition (abs(S12[DELTA_SRPLS] - SWPrulecv[DELTA_SRPLS])<.1 .or. S12[DELTA_SRPLS] < SWPrulecv[DELTA_SRPLS])
                   .and. C407_swp[DELTA_SRPLS] > 0.1	!-KS, 9/18/18. Projects are paying tax to move water South to fill San Luis.
        value 1.}
    case otherwise {
        condition always
        value 0.}
}

define EI_Balanced {
    case LowExcessDO {	!projects are operating to meet required Delta Outflow standards and make use of the Delta Inflow to export up to EI limit (C407 - C407_ANN < 0.1 or C407_CVP + C407_SWP < 0.1)
        condition EI_Control>.5 .and. C407_cvp[DELTA_SRPLS] + C407_swp[DELTA_SRPLS] < .1
        value 1.}
    case ForRuleCurve {	!projects are paying the "tax" - releasing above the required Delta Outflow - to move water
        condition EI_Control>.5 .and. RuleCVControl>.5
        value 1.}
    case CycleConsistency {!This captures other months when projects may be paying the tax to move water South for purposes other than to fill San Luis, i.e., catch-all constraint.
        condition EI_Control>.5 .and. C407_cvp[DELTA_SRPLS] + C407_swp[DELTA_SRPLS] > 0.1	!-KS, 9/18/18. Projects are paying tax to move water South to fill San Luis.	< 1000.	!1000 cfs is a threshold set by N Parker	
                  .and. abs(C407_cvp[DELTA_SRPLS] + C407_swp[DELTA_SRPLS] - C407_cvp[UPSTREAM] - C407_swp[UPSTREAM]) < 1
        value 1.}
    case otherwise {
        condition always
        value 0.}
}    

define Balanced_D1641 {
    case Balanced {
        condition C407_cvp[DELTA_SRPLS] + C407_swp[DELTA_SRPLS] < 0.1	!same as C407 - C407_ANN < 0.1; C407_WTS, C407_WHLCV, and C407_WHLJP = 0 until wheeling operations are turned on in the last cycle.
                    .or. EI_Balanced > 0.5
        value 1.0 }
    case Excess {
        condition always
        value 0.0 }
}

define CVPExpCapShare_Blncd {select CVPExpCapShare_Blncd_
       from       ShrngRatios
       where      wyt=wyt_SAC}

define CVPExpCapShare_Srpls {select CVPExpCapShare_Srpls_
       from       ShrngRatios
       where      wyt=wyt_SAC}

define SWPExpCapShare_Blncd {value 1 - CVPExpCapShare_Blncd}
define SWPExpCapShare_Srpls {value 1 - CVPExpCapShare_Srpls} 

define CVPExpCapShare_D1641 {
    case Balanced {
        condition Balanced_D1641 > 0.5
        value CVPExpCapShare_Blncd
    }
    case Excess {
        condition Balanced_D1641 < 0.5
        value CVPExpCapShare_Srpls
    }
}

define SWPExpCapShare_D1641 {
    case Balanced {
        condition Balanced_D1641 > 0.5
        value SWPExpCapShare_Blncd
    }
    case Excess {
        condition Balanced_D1641 < 0.5
        value SWPExpCapShare_Srpls
    }
}    

define EI_Control_ {alias EI_Control kind 'temp' units 'none'}
define RuleCVControl_ {alias RuleCVControl kind 'temp' units 'none'}
define EI_Balanced_ {alias EI_Balanced kind 'temp' units 'none'}
define Balanced_D1641_ {alias Balanced_D1641 kind 'temp' units 'none'}
define CVPExpCapShare_D1641_ {alias CVPExpCapShare_D1641 kind 'temp' units 'none'}
define SWPExpCapShare_D1641_ {alias SWPExpCapShare_D1641 kind 'temp' units 'none'}


define EI_Control_up {
    case Controlling {
        condition eiexpctrl[UPSTREAM] - ExportActualTD[UPSTREAM] < 0.1
                    .and. c407_swp[UPSTREAM] + c407_cvp[UPSTREAM] > 0.1
                    .and. (C407_CVP[UPSTREAM] + C407_SWP[UPSTREAM]) > (C407_CVP[PRESETUP] + C407_SWP[PRESETUP]) + 0.1
        value 1.0 }
    case otherwise {
        condition always
        value 0.0 }
}
define Balanced_Up {
    case Balanced_Upstream {
        condition abs(C407[UPSTREAM] - C407_ANN[UPSTREAM]) < 0.1
                    .or. EI_Control_up>.5
        value 1.0 }
    case Excess_Upstream {
        condition always
        value 0.0 }
}

define EI_Control_Up_ {alias EI_Control_Up kind 'temp' units 'none'}
define Balanced_Up_ {alias Balanced_Up kind 'temp' units 'none'}

